alias funcNum R1;
alias currPid R2;


if(funcNum == ACQUIRE_TERMINAL) then
	while(([TERMINAL_STATUS_TABLE]) == 1) do
		[PROCESS_TABLE + (currPid*16) + 4] = WAIT_TERMINAL;
		multipush(R0,R1,R2,R3,R4);
		call MOD_5;
		multipop(R0,R1,R2,R3,R4);
	endwhile;
	[TERMINAL_STATUS_TABLE] = 1;
	[TERMINAL_STATUS_TABLE + 1] = currPid;
	return;
endif;

if(funcNum == RELEASE_TERMINAL) then
	if(currPid != [TERMINAL_STATUS_TABLE + 1]) then
		R0 = -1;
		return;
	else
		[TERMINAL_STATUS_TABLE] = 0;
		alias i R4;
		i = 0;
		while(i < 16)	do
			if([PROCESS_TABLE + (i*16) + 4] == WAIT_TERMINAL) then
				[PROCESS_TABLE + ((i*16)) + 4] = READY;
			endif;
			i = i + 1;
		endwhile;
		R0 = 0;
	endif;
	return;
endif;

if(funcNum == ACQUIRE_DISK) then
	while([DISK_STATUS_TABLE] == 1) do
		[PROCESS_TABLE + (currPid)*16 + 4] = WAIT_DISK;
		backup;
		call MOD_5;
		restore;
	endwhile;
	[DISK_STATUS_TABLE] = 1;
	[DISK_STATUS_TABLE + 4] = currPid;
	return;
endif;

return;
