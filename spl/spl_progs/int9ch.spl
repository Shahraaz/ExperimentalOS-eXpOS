alias userSP R0;
userSP = SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 9;

alias physical_page_number R1;
alias offset R2;
alias file_name R3;
physical_page_number = [PTBR + 2*((userSP - 4)/512)];
offset = (userSP - 4)%512;
file_name = [physical_page_number * 512 + offset];

alias i R4;
alias idx R5;

i = 1;
idx = -1;
while(i < MAX_FILE_NUM) do
	if(([INODE_TABLE+(i*16)]==EXEC) && ([INODE_TABLE+(i*16)+1]==file_name)) then
		idx = i;
		break;
	endif;
	i = i + 1;
endwhile;

if(idx < 0) then
	print "NOT FOUND!";
	print file_name;
	SP = userSP;
	[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9]=0;
	[[PTBR+2*((userSP - 1)/512)]*512 + ((userSP - 1)%512)] = -1;
	ireturn;

endif;

alias exitPID R6;
exitPID = [SYSTEM_STATUS_TABLE+1];

backup;
R1 = EXIT_PROCESS;
R2 = exitPID;
call MOD_1;
restore;

alias user_area_page_number R7;

user_area_page_number = [PROCESS_TABLE + (exitPID * 16) + 11];
[MEMORY_FREE_LIST + user_area_page_number] = [MEMORY_FREE_LIST + user_area_page_number] + 1;

[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

SP = [PROCESS_TABLE + (exitPID*16) + 11]*512 - 1;

[PROCESS_TABLE + (exitPID*16) + 4] = RUNNING;

[PROCESS_TABLE + (exitPID*16) + 7] = idx;

PTBR = PAGE_TABLE_BASE + exitPID*20;

[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

backup;
R1 = 1;
call MOD_2;
[PTBR + 16] = R0;
[PTBR + 17] = "0110";
restore;

backup;
R1 = 1;
call MOD_2;
[PTBR + 18] = R0;
[PTBR + 19] = "0110";
restore;

[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

alias inodePos R8;
inodePos = INODE_TABLE + (idx*16);

if([inodePos + 8] != -1) then
	backup;
	R1 = GET_CODE_PAGE;
	R2 = [inodePos + 8];
	call MOD_2;
	[PTBR + 8] = R0;
	[PTBR + 9] = "0100";
	restore;
endif;

[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12]  = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

alias off R9;
off = 496;
while(off <= 511) do
	[user_area_page_number * 512 + off] = -1;
	off = off + 2;
endwhile;

off = 0;
while( off < 10) do
	[DISK_MAP_TABLE + (10*exitPID) + off] = -1;
	off = off + 1;
endwhile;	

[DISK_MAP_TABLE + (10*exitPID) + 4] = [inodePos + 8];
[DISK_MAP_TABLE + (10*exitPID) + 5] = [inodePos + 9];
[DISK_MAP_TABLE + (10*exitPID) + 6] = [inodePos + 10];
[DISK_MAP_TABLE + (10*exitPID) + 7] = [inodePos + 11];

[[PTBR+16] * 512] = [[PTBR + 8]*512 + 1];
SP = 8 * 512;

[PROCESS_TABLE + (exitPID * 16) + 9] = 0;
print "EXECEND";
ireturn;
