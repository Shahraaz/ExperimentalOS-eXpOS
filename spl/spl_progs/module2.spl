alias funcNum R1;
alias pageNum R2;
if(funcNum == GET_FREE_PAGE) then
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
	while ([SYSTEM_STATUS_TABLE + 2] == 0) do
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 4] = WAIT_MEM;
		backup;
		call MOD_5;
		restore;
	endwhile;
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
	alias i R3;
	i = 0;
	while (i < MAX_MEM_PAGE)  do
		if([MEMORY_FREE_LIST + i] == 0) then
			[MEMORY_FREE_LIST + i] = 1;
			break;
		endif;
		i = i + 1;
	endwhile;
	R0 = i;
	return;
endif;

if(funcNum == RELEASE_PAGE) then
	[MEMORY_FREE_LIST + pageNum] = [MEMORY_FREE_LIST + pageNum] - 1;
	if ([MEMORY_FREE_LIST + pageNum] == 0) then
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
		alias i R3;
		i = 0;
		while(i < 16) do
			if([PROCESS_TABLE + (i*16) + 4] == WAIT_MEM) then
				[PROCESS_TABLE + (i*16) + 4] = READY;
			endif;
			i = i + 1;
		endwhile;
	endif;
	return;
endif;

return;
